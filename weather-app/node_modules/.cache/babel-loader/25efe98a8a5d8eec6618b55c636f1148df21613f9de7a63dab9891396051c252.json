{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\myreactproject\\\\weatherapp\\\\weather-app\\\\src\\\\components\\\\WeatherApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiKey = \"1da550247f2ed8a45a02dda55086b7a2\";\nconst WeatherApp = () => {\n  _s();\n  var _weatherData$rain;\n  const [city, setCity] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  useEffect(() => {\n    const storedCity = localStorage.getItem(\"userCity\");\n    const storedWeatherData = localStorage.getItem(\"weatherData\");\n    if (storedCity && storedWeatherData) {\n      setCity(storedCity);\n      setWeatherData(JSON.parse(storedWeatherData));\n    }\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    getWeatherData();\n  };\n  const getWeatherData = () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`).then(response => {\n      const weatherData = response.data;\n      setWeatherData(weatherData);\n      localStorage.setItem(\"userCity\", city);\n      localStorage.setItem(\"weatherData\", JSON.stringify(weatherData));\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n  const refreshWeather = () => {\n    getWeatherData();\n  };\n  const isDay = (sunriseTimestamp, sunsetTimestamp) => {\n    const now = Date.now() / 1000;\n    return now >= sunriseTimestamp && now < sunsetTimestamp;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weather App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cityInput\",\n          children: \"Enter City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"cityInput\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Get Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"refreshIcon\",\n          onClick: refreshWeather,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSyncAlt,\n            spin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"weatherData\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [weatherData.main.temp.toFixed(1), \"\\xB0C temperature from\", \" \", weatherData.main.temp_min.toFixed(1), \" to\", \" \", weatherData.main.temp_max.toFixed(1), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Weather: \", weatherData.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rain Amount: \", ((_weatherData$rain = weatherData.rain) === null || _weatherData$rain === void 0 ? void 0 : _weatherData$rain[\"1h\"]) || 0, \" mm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind:\", \" \", (weatherData.wind.speed * 3.6).toFixed(2), \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: isDay(weatherData.sys.sunrise, weatherData.sys.sunset) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Day \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSun\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Night \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMoon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date().toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", new Date().toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"vjpzJlgLrxQQ1u6rd9pfjhcw3tE=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","faSun","faMoon","faSyncAlt","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","apiKey","WeatherApp","_s","_weatherData$rain","city","setCity","weatherData","setWeatherData","storedCity","localStorage","getItem","storedWeatherData","JSON","parse","handleSubmit","e","preventDefault","getWeatherData","get","then","response","data","setItem","stringify","catch","error","console","refreshWeather","isDay","sunriseTimestamp","sunsetTimestamp","now","Date","className","wrapper","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","required","onClick","icon","spin","main","temp","toFixed","temp_min","temp_max","weather","description","rain","humidity","wind","speed","sys","sunrise","sunset","toDateString","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/myreactproject/weatherapp/weather-app/src/components/WeatherApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun, faMoon, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styles  from \"./style.module.css\";\r\n\r\n\r\nconst apiKey = \"1da550247f2ed8a45a02dda55086b7a2\";\r\n\r\nconst WeatherApp = () => {\r\n  const [city, setCity] = useState(\"\");\r\n  const [weatherData, setWeatherData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedCity = localStorage.getItem(\"userCity\");\r\n    const storedWeatherData = localStorage.getItem(\"weatherData\");\r\n\r\n    if (storedCity && storedWeatherData) {\r\n      setCity(storedCity);\r\n      setWeatherData(JSON.parse(storedWeatherData));\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    getWeatherData();\r\n  };\r\n\r\n  const getWeatherData = () => {\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\r\n      )\r\n      .then((response) => {\r\n        const weatherData = response.data;\r\n        setWeatherData(weatherData);\r\n        localStorage.setItem(\"userCity\", city);\r\n        localStorage.setItem(\"weatherData\", JSON.stringify(weatherData));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  const refreshWeather = () => {\r\n    getWeatherData();\r\n  };\r\n\r\n  const isDay = (sunriseTimestamp, sunsetTimestamp) => {\r\n    const now = Date.now() / 1000;\r\n    return now >= sunriseTimestamp && now < sunsetTimestamp;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className=\"main-container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <h1>Weather App</h1>\r\n          <label htmlFor=\"cityInput\">Enter City:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"cityInput\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Get Weather</button>\r\n          <span id=\"refreshIcon\" onClick={refreshWeather}>\r\n            <FontAwesomeIcon icon={faSyncAlt} spin />\r\n          </span>\r\n        </form>\r\n        {weatherData && (\r\n          <div id=\"weatherData\">\r\n            <p>\r\n              {weatherData.main.temp.toFixed(1)}°C temperature from{\" \"}\r\n              {weatherData.main.temp_min.toFixed(1)} to{\" \"}\r\n              {weatherData.main.temp_max.toFixed(1)}°C\r\n            </p>\r\n            <p>Weather: {weatherData.weather[0].description}</p>\r\n            <p>Rain Amount: {weatherData.rain?.[\"1h\"] || 0} mm</p>\r\n            <p>Humidity: {weatherData.main.humidity}%</p>\r\n            <p>\r\n              Wind:{\" \"}\r\n              {(weatherData.wind.speed * 3.6).toFixed(2)} km/h\r\n            </p>\r\n            <p>\r\n              {isDay(weatherData.sys.sunrise, weatherData.sys.sunset) ? (\r\n                <>\r\n                  Day <FontAwesomeIcon icon={faSun} />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  Night <FontAwesomeIcon icon={faMoon} />\r\n                </>\r\n              )}\r\n            </p>\r\n            <p>Date: {new Date().toDateString()}</p>\r\n            <p>\r\n              Time: {new Date().toLocaleTimeString()}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}