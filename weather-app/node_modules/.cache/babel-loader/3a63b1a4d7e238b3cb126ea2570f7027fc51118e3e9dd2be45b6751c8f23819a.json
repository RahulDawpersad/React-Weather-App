{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\myreactproject\\\\weatherapp\\\\weather-app\\\\src\\\\components\\\\WeatherApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./style.module.css\";\nimport Preloader from \"./Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiKey = \"1da550247f2ed8a45a02dda55086b7a2\";\nexport default function WeatherApp() {\n  _s();\n  var _weatherData$rain;\n  const [city, setCity] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const storedCity = localStorage.getItem(\"userCity\");\n    const storedWeatherData = localStorage.getItem(\"weatherData\");\n    if (storedCity && storedWeatherData) {\n      setCity(storedCity);\n      setWeatherData(JSON.parse(storedWeatherData));\n    }\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true); // Set loading to true when submitting the form\n    getWeatherData();\n  };\n  const getWeatherData = () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`).then(response => {\n      const weatherData = response.data;\n      setWeatherData(weatherData);\n      localStorage.setItem(\"userCity\", city);\n      localStorage.setItem(\"weatherData\", JSON.stringify(weatherData));\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    }).finally(() => {\n      setLoading(false); // Set loading to false when the request is completed\n    });\n  };\n  const refreshWeather = () => {\n    setLoading(true); // Set loading to true when refreshing weather\n    getWeatherData();\n  };\n  const isDay = (sunriseTimestamp, sunsetTimestamp) => {\n    const now = Date.now() / 1000;\n    return now >= sunriseTimestamp && now < sunsetTimestamp;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mainContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Skycast Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cityInput\",\n        children: \"Enter City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"cityInput\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"refreshIcon\",\n        onClick: refreshWeather,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSyncAlt,\n          spin: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"weatherData\",\n      className: styles.weatherData,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [weatherData.main.temp.toFixed(1), \"\\xB0C temperature from\", \" \", weatherData.main.temp_min.toFixed(1), \" to\", \" \", weatherData.main.temp_max.toFixed(1), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weather: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rain Amount: \", ((((_weatherData$rain = weatherData.rain) === null || _weatherData$rain === void 0 ? void 0 : _weatherData$rain[\"1h\"]) || 0) * 100).toFixed(0), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind:\", \" \", (weatherData.wind.speed * 3.6).toFixed(2), \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isDay(weatherData.sys.sunrise, weatherData.sys.sunset) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Day \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSun\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Night \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faMoon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", new Date().toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time: \", new Date().toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherApp, \"R8B4b+lKyac9XRY8Q+481DazuoA=\");\n_c = WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","faSun","faMoon","faSyncAlt","styles","Preloader","jsxDEV","_jsxDEV","Fragment","_Fragment","apiKey","WeatherApp","_s","_weatherData$rain","city","setCity","weatherData","setWeatherData","loading","setLoading","storedCity","localStorage","getItem","storedWeatherData","JSON","parse","handleSubmit","e","preventDefault","getWeatherData","get","then","response","data","setItem","stringify","catch","error","console","finally","refreshWeather","isDay","sunriseTimestamp","sunsetTimestamp","now","Date","className","mainContainer","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","required","onClick","icon","spin","main","temp","toFixed","temp_min","temp_max","weather","description","rain","humidity","wind","speed","sys","sunrise","sunset","toDateString","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/myreactproject/weatherapp/weather-app/src/components/WeatherApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun, faMoon, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styles from \"./style.module.css\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nconst apiKey = \"1da550247f2ed8a45a02dda55086b7a2\";\r\n\r\nexport default function WeatherApp() {\r\n  const [city, setCity] = useState(\"\");\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedCity = localStorage.getItem(\"userCity\");\r\n    const storedWeatherData = localStorage.getItem(\"weatherData\");\r\n\r\n    if (storedCity && storedWeatherData) {\r\n      setCity(storedCity);\r\n      setWeatherData(JSON.parse(storedWeatherData));\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); // Set loading to true when submitting the form\r\n    getWeatherData();\r\n  };\r\n\r\n  const getWeatherData = () => {\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\r\n      )\r\n      .then((response) => {\r\n        const weatherData = response.data;\r\n        setWeatherData(weatherData);\r\n        localStorage.setItem(\"userCity\", city);\r\n        localStorage.setItem(\"weatherData\", JSON.stringify(weatherData));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Set loading to false when the request is completed\r\n      });\r\n  };\r\n\r\n  const refreshWeather = () => {\r\n    setLoading(true); // Set loading to true when refreshing weather\r\n    getWeatherData();\r\n  };\r\n\r\n  const isDay = (sunriseTimestamp, sunsetTimestamp) => {\r\n    const now = Date.now() / 1000;\r\n    return now >= sunriseTimestamp && now < sunsetTimestamp;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Skycast Weather App</h1>\r\n        <label htmlFor=\"cityInput\">Enter City:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"cityInput\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Get Weather</button>\r\n        <span id=\"refreshIcon\" onClick={refreshWeather}>\r\n          <FontAwesomeIcon icon={faSyncAlt} spin={loading} />\r\n        </span>\r\n      </form>\r\n      {loading ? (\r\n        <Preloader />\r\n      ) : (\r\n        weatherData && (\r\n          <div id=\"weatherData\" className={styles.weatherData}>\r\n          <p>\r\n              {weatherData.main.temp.toFixed(1)}°C temperature from{\" \"}\r\n              {weatherData.main.temp_min.toFixed(1)} to{\" \"}\r\n              {weatherData.main.temp_max.toFixed(1)}°C\r\n            </p>\r\n            <p>Weather: {weatherData.weather[0].description}</p>\r\n            {/* <p>Rain Amount: {weatherData.rain?.[\"1h\"] || 0} %</p> */}\r\n            <p>Rain Amount: {((weatherData.rain?.[\"1h\"] || 0) * 100).toFixed(0)}%</p>\r\n            <p>Humidity: {weatherData.main.humidity}%</p>\r\n            <p>\r\n              Wind:{\" \"}\r\n              {(weatherData.wind.speed * 3.6).toFixed(2)} km/h\r\n            </p>\r\n            <p>\r\n              {isDay(weatherData.sys.sunrise, weatherData.sys.sunset) ? (\r\n                <>\r\n                  Day <FontAwesomeIcon icon={faSun} />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  Night <FontAwesomeIcon icon={faMoon} />\r\n                </>\r\n              )}\r\n            </p>\r\n            <p>Date: {new Date().toDateString()}</p>\r\n            <p>\r\n              Time: {new Date().toLocaleTimeString()}\r\n            </p>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}