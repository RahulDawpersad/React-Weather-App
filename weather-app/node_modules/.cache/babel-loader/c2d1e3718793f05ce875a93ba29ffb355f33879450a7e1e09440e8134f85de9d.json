{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\myreactproject\\\\weatherapp\\\\weather-app\\\\src\\\\components\\\\WeatherApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./style.module.css\";\nimport Preloader from \"./Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"1da550247f2ed8a45a02dda55086b7a2\";\nexport default function WeatherApp() {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const storedCity = localStorage.getItem(\"userCity\");\n    const storedWeatherData = localStorage.getItem(\"weatherData\");\n    if (storedCity && storedWeatherData) {\n      setCity(storedCity);\n      setWeatherData(JSON.parse(storedWeatherData));\n    }\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true); // Set loading to true when submitting the form\n    getWeatherData();\n  };\n  const getWeatherData = () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`).then(response => {\n      const weatherData = response.data;\n      setWeatherData(weatherData);\n      localStorage.setItem(\"userCity\", city);\n      localStorage.setItem(\"weatherData\", JSON.stringify(weatherData));\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    }).finally(() => {\n      setLoading(false); // Set loading to false when the request is completed\n    });\n  };\n  const refreshWeather = () => {\n    setLoading(true); // Set loading to true when refreshing weather\n    getWeatherData();\n  };\n  const isDay = (sunriseTimestamp, sunsetTimestamp) => {\n    const now = Date.now() / 1000;\n    return now >= sunriseTimestamp && now < sunsetTimestamp;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mainContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Skycast Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cityInput\",\n        children: \"Enter City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"cityInput\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"refreshIcon\",\n        onClick: refreshWeather,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSyncAlt,\n          spin: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"weatherData\",\n      className: styles.weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherApp, \"R8B4b+lKyac9XRY8Q+481DazuoA=\");\n_c = WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","faSun","faMoon","faSyncAlt","styles","Preloader","jsxDEV","_jsxDEV","apiKey","WeatherApp","_s","city","setCity","weatherData","setWeatherData","loading","setLoading","storedCity","localStorage","getItem","storedWeatherData","JSON","parse","handleSubmit","e","preventDefault","getWeatherData","get","then","response","data","setItem","stringify","catch","error","console","finally","refreshWeather","isDay","sunriseTimestamp","sunsetTimestamp","now","Date","className","mainContainer","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","required","onClick","icon","spin","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/myreactproject/weatherapp/weather-app/src/components/WeatherApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun, faMoon, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styles from \"./style.module.css\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nconst apiKey = \"1da550247f2ed8a45a02dda55086b7a2\";\r\n\r\nexport default function WeatherApp() {\r\n  const [city, setCity] = useState(\"\");\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedCity = localStorage.getItem(\"userCity\");\r\n    const storedWeatherData = localStorage.getItem(\"weatherData\");\r\n\r\n    if (storedCity && storedWeatherData) {\r\n      setCity(storedCity);\r\n      setWeatherData(JSON.parse(storedWeatherData));\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); // Set loading to true when submitting the form\r\n    getWeatherData();\r\n  };\r\n\r\n  const getWeatherData = () => {\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\r\n      )\r\n      .then((response) => {\r\n        const weatherData = response.data;\r\n        setWeatherData(weatherData);\r\n        localStorage.setItem(\"userCity\", city);\r\n        localStorage.setItem(\"weatherData\", JSON.stringify(weatherData));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Set loading to false when the request is completed\r\n      });\r\n  };\r\n\r\n  const refreshWeather = () => {\r\n    setLoading(true); // Set loading to true when refreshing weather\r\n    getWeatherData();\r\n  };\r\n\r\n  const isDay = (sunriseTimestamp, sunsetTimestamp) => {\r\n    const now = Date.now() / 1000;\r\n    return now >= sunriseTimestamp && now < sunsetTimestamp;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Skycast Weather App</h1>\r\n        <label htmlFor=\"cityInput\">Enter City:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"cityInput\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Get Weather</button>\r\n        <span id=\"refreshIcon\" onClick={refreshWeather}>\r\n          <FontAwesomeIcon icon={faSyncAlt} spin={loading} />\r\n        </span>\r\n      </form>\r\n      {loading ? (\r\n        <Preloader />\r\n      ) : (\r\n        weatherData && (\r\n          <div id=\"weatherData\" className={styles.weatherData}>\r\n            {/* Your existing weather data display */}\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,KAAK,EAAEC,MAAM,EAAEC,SAAS,QAAQ,mCAAmC;AAC5E,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAG,kCAAkC;AAEjD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMmB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACnD,MAAMC,iBAAiB,GAAGF,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAE7D,IAAIF,UAAU,IAAIG,iBAAiB,EAAE;MACnCR,OAAO,CAACK,UAAU,CAAC;MACnBH,cAAc,CAACO,IAAI,CAACC,KAAK,CAACF,iBAAiB,CAAC,CAAC;IAC/C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBT,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBU,cAAc,CAAC,CAAC;EAClB,CAAC;EAED,MAAMA,cAAc,GAAGA,CAAA,KAAM;IAC3B3B,KAAK,CACF4B,GAAG,CACD,qDAAoDhB,IAAK,UAASH,MAAO,eAC5E,CAAC,CACAoB,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMhB,WAAW,GAAGgB,QAAQ,CAACC,IAAI;MACjChB,cAAc,CAACD,WAAW,CAAC;MAC3BK,YAAY,CAACa,OAAO,CAAC,UAAU,EAAEpB,IAAI,CAAC;MACtCO,YAAY,CAACa,OAAO,CAAC,aAAa,EAAEV,IAAI,CAACW,SAAS,CAACnB,WAAW,CAAC,CAAC;IAClE,CAAC,CAAC,CACDoB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC,CACDE,OAAO,CAAC,MAAM;MACbpB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAED,MAAMqB,cAAc,GAAGA,CAAA,KAAM;IAC3BrB,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBU,cAAc,CAAC,CAAC;EAClB,CAAC;EAED,MAAMY,KAAK,GAAGA,CAACC,gBAAgB,EAAEC,eAAe,KAAK;IACnD,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,GAAG,IAAI;IAC7B,OAAOA,GAAG,IAAIF,gBAAgB,IAAIE,GAAG,GAAGD,eAAe;EACzD,CAAC;EAED,oBACEjC,OAAA;IAAKoC,SAAS,EAAEvC,MAAM,CAACwC,aAAc;IAAAC,QAAA,gBACnCtC,OAAA;MAAMuC,QAAQ,EAAEvB,YAAa;MAAAsB,QAAA,gBAC3BtC,OAAA;QAAAsC,QAAA,EAAI;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B3C,OAAA;QAAO4C,OAAO,EAAC,WAAW;QAAAN,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9C3C,OAAA;QACE6C,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,WAAW;QACdC,KAAK,EAAE3C,IAAK;QACZ4C,QAAQ,EAAG/B,CAAC,IAAKZ,OAAO,CAACY,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAE;QACzCG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3C,OAAA;QAAQ6C,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1C3C,OAAA;QAAM8C,EAAE,EAAC,aAAa;QAACK,OAAO,EAAErB,cAAe;QAAAQ,QAAA,eAC7CtC,OAAA,CAACP,eAAe;UAAC2D,IAAI,EAAExD,SAAU;UAACyD,IAAI,EAAE7C;QAAQ;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACNnC,OAAO,gBACNR,OAAA,CAACF,SAAS;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAEbrC,WAAW,iBACTN,OAAA;MAAK8C,EAAE,EAAC,aAAa;MAACV,SAAS,EAAEvC,MAAM,CAACS;IAAY;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/C,CAER;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxC,EAAA,CA9EuBD,UAAU;AAAAoD,EAAA,GAAVpD,UAAU;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}