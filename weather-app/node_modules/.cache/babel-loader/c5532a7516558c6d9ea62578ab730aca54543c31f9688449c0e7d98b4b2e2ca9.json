{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faSun,faMoon,faSyncAlt}from\"@fortawesome/free-solid-svg-icons\";import Preloader from\"./Preloader\";import styles from\"./style.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const apiKey=\"1da550247f2ed8a45a02dda55086b7a2\";export default function WeatherApp(){var _weatherData$rain;const[city,setCity]=useState(\"\");const[weatherData,setWeatherData]=useState(null);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{const storedCity=localStorage.getItem(\"userCity\");const storedWeatherData=localStorage.getItem(\"weatherData\");if(storedCity&&storedWeatherData){setCity(storedCity);setWeatherData(JSON.parse(storedWeatherData));}setIsLoading(false);// Set loading to false once data is loaded or component mounts\n},[]);const handleSubmit=e=>{e.preventDefault();getWeatherData();};const getWeatherData=()=>{setIsLoading(true);// Set loading to true before making the API call\naxios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\"&appid=\").concat(apiKey,\"&units=metric\")).then(response=>{const weatherData=response.data;setWeatherData(weatherData);localStorage.setItem(\"userCity\",city);localStorage.setItem(\"weatherData\",JSON.stringify(weatherData));}).catch(error=>{console.error(\"Error:\",error);}).finally(()=>{setIsLoading(false);// Set loading to false after the API call is complete\n});};const refreshWeather=()=>{getWeatherData();};const isDay=(sunriseTimestamp,sunsetTimestamp)=>{const now=Date.now()/1000;return now>=sunriseTimestamp&&now<sunsetTimestamp;};return/*#__PURE__*/_jsx(_Fragment,{children:isLoading?/*#__PURE__*/_jsx(Preloader,{}):/*#__PURE__*/_jsx(\"div\",{className:styles.wrapper,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.mainContainer,children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Skycast Weather App\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cityInput\",children:\"Enter City:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"cityInput\",value:city,onChange:e=>setCity(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Get Weather\"}),/*#__PURE__*/_jsx(\"span\",{id:\"refreshIcon\",onClick:refreshWeather,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSyncAlt,spin:true})})]}),weatherData&&/*#__PURE__*/_jsxs(\"div\",{id:\"weatherData\",className:styles.weatherData,children:[/*#__PURE__*/_jsxs(\"p\",{children:[weatherData.main.temp.toFixed(1),\"\\xB0C temperature from\",\" \",weatherData.main.temp_min.toFixed(1),\" to\",\" \",weatherData.main.temp_max.toFixed(1),\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Weather: \",weatherData.weather[0].description]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Rain Amount: \",((((_weatherData$rain=weatherData.rain)===null||_weatherData$rain===void 0?void 0:_weatherData$rain[\"1h\"])||0)*100).toFixed(0),\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Humidity: \",weatherData.main.humidity,\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Wind:\",\" \",(weatherData.wind.speed*3.6).toFixed(2),\" km/h\"]}),/*#__PURE__*/_jsx(\"p\",{children:isDay(weatherData.sys.sunrise,weatherData.sys.sunset)?/*#__PURE__*/_jsxs(_Fragment,{children:[\"Day \",/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSun})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[\"Night \",/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faMoon})]})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Date: \",new Date().toDateString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Time: \",new Date().toLocaleTimeString()]})]})]})})});}","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","faSun","faMoon","faSyncAlt","Preloader","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","apiKey","WeatherApp","_weatherData$rain","city","setCity","weatherData","setWeatherData","isLoading","setIsLoading","storedCity","localStorage","getItem","storedWeatherData","JSON","parse","handleSubmit","e","preventDefault","getWeatherData","get","concat","then","response","data","setItem","stringify","catch","error","console","finally","refreshWeather","isDay","sunriseTimestamp","sunsetTimestamp","now","Date","children","className","wrapper","mainContainer","onSubmit","htmlFor","type","id","value","onChange","target","required","onClick","icon","spin","main","temp","toFixed","temp_min","temp_max","weather","description","rain","humidity","wind","speed","sys","sunrise","sunset","toDateString","toLocaleTimeString"],"sources":["C:/Users/PC/Desktop/myreactproject/weatherapp/weather-app/src/components/WeatherApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun, faMoon, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Preloader from \"./Preloader\";\r\nimport styles from \"./style.module.css\";\r\n\r\nconst apiKey = \"1da550247f2ed8a45a02dda55086b7a2\";\r\n\r\nexport default function WeatherApp() {\r\n  const [city, setCity] = useState(\"\");\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const storedCity = localStorage.getItem(\"userCity\");\r\n    const storedWeatherData = localStorage.getItem(\"weatherData\");\r\n\r\n    if (storedCity && storedWeatherData) {\r\n      setCity(storedCity);\r\n      setWeatherData(JSON.parse(storedWeatherData));\r\n    }\r\n\r\n    setIsLoading(false); // Set loading to false once data is loaded or component mounts\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    getWeatherData();\r\n  };\r\n\r\n  const getWeatherData = () => {\r\n    setIsLoading(true); // Set loading to true before making the API call\r\n\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\r\n      )\r\n      .then((response) => {\r\n        const weatherData = response.data;\r\n        setWeatherData(weatherData);\r\n        localStorage.setItem(\"userCity\", city);\r\n        localStorage.setItem(\"weatherData\", JSON.stringify(weatherData));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Set loading to false after the API call is complete\r\n      });\r\n  };\r\n\r\n  const refreshWeather = () => {\r\n    getWeatherData();\r\n  };\r\n\r\n  const isDay = (sunriseTimestamp, sunsetTimestamp) => {\r\n    const now = Date.now() / 1000;\r\n    return now >= sunriseTimestamp && now < sunsetTimestamp;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Preloader />\r\n      ) : (\r\n        <div className={styles.wrapper}>\r\n          <div className={styles.mainContainer}>\r\n            <form onSubmit={handleSubmit}>\r\n              <h1>Skycast Weather App</h1>\r\n              <label htmlFor=\"cityInput\">Enter City:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"cityInput\"\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n                required\r\n              />\r\n              <button type=\"submit\">Get Weather</button>\r\n              <span id=\"refreshIcon\" onClick={refreshWeather}>\r\n                <FontAwesomeIcon icon={faSyncAlt} spin />\r\n              </span>\r\n            </form>\r\n            {weatherData && (\r\n              <div id=\"weatherData\" className={styles.weatherData}>\r\n                <p>\r\n                  {weatherData.main.temp.toFixed(1)}°C temperature from{\" \"}\r\n                  {weatherData.main.temp_min.toFixed(1)} to{\" \"}\r\n                  {weatherData.main.temp_max.toFixed(1)}°C\r\n                </p>\r\n                <p>Weather: {weatherData.weather[0].description}</p>\r\n                {/* <p>Rain Amount: {weatherData.rain?.[\"1h\"] || 0} %</p> */}\r\n                <p>Rain Amount: {((weatherData.rain?.[\"1h\"] || 0) * 100).toFixed(0)}%</p>\r\n                <p>Humidity: {weatherData.main.humidity}%</p>\r\n                <p>\r\n                  Wind:{\" \"}\r\n                  {(weatherData.wind.speed * 3.6).toFixed(2)} km/h\r\n                </p>\r\n                <p>\r\n                  {isDay(weatherData.sys.sunrise, weatherData.sys.sunset) ? (\r\n                    <>\r\n                      Day <FontAwesomeIcon icon={faSun} />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      Night <FontAwesomeIcon icon={faMoon} />\r\n                    </>\r\n                  )}\r\n                </p>\r\n                <p>Date: {new Date().toDateString()}</p>\r\n                <p>\r\n                  Time: {new Date().toLocaleTimeString()}\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}